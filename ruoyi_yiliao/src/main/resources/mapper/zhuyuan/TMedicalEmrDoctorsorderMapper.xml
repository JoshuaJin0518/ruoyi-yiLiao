<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.ruoyi_yiliao.mapper.TMedicalEmrDoctorsorderMapper">
    
    <resultMap type="TMedicalEmrDoctorsorder" id="TMedicalEmrDoctorsorderResult">
        <result property="id"    column="id"    />
        <result property="personId"    column="personId"    />
        <result property="doctorId"    column="doctorId"    />
        <result property="status"    column="status"    />
        <result property="type"    column="type"    />
        <result property="description"    column="description"    />
        <result property="createTime"    column="createTime"    />
    </resultMap>

    <sql id="selectTMedicalEmrDoctorsorderVo">
        select id, personId, doctorId, status, type, description, createTime from t_medical_emr_doctorsorder
    </sql>

    <select id="selectTMedicalEmrDoctorsorderList" parameterType="TMedicalEmrDoctorsorder" resultMap="TMedicalEmrDoctorsorderResult">
        <include refid="selectTMedicalEmrDoctorsorderVo"/>
        <where>  
            <if test="personId != null  and personId != ''"> and personId = #{personId}</if>
            <if test="doctorId != null  and doctorId != ''"> and doctorId = #{doctorId}</if>
            <if test="status != null "> and status = #{status}</if>
            <if test="type != null "> and type = #{type}</if>
            <if test="description != null  and description != ''"> and description = #{description}</if>
            <if test="createTime != null "> and createTime = #{createTime}</if>
        </where>
    </select>
    
    <select id="selectTMedicalEmrDoctorsorderById" parameterType="String" resultMap="TMedicalEmrDoctorsorderResult">
        <include refid="selectTMedicalEmrDoctorsorderVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertTMedicalEmrDoctorsorder" parameterType="TMedicalEmrDoctorsorder">
        insert into t_medical_emr_doctorsorder
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="personId != null">personId,</if>
            <if test="doctorId != null">doctorId,</if>
            <if test="status != null">status,</if>
            <if test="type != null">type,</if>
            <if test="description != null">description,</if>
            <if test="createTime != null">createTime,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="personId != null">#{personId},</if>
            <if test="doctorId != null">#{doctorId},</if>
            <if test="status != null">#{status},</if>
            <if test="type != null">#{type},</if>
            <if test="description != null">#{description},</if>
            <if test="createTime != null">#{createTime},</if>
         </trim>
    </insert>

    <update id="updateTMedicalEmrDoctorsorder" parameterType="TMedicalEmrDoctorsorder">
        update t_medical_emr_doctorsorder
        <trim prefix="SET" suffixOverrides=",">
            <if test="personId != null">personId = #{personId},</if>
            <if test="doctorId != null">doctorId = #{doctorId},</if>
            <if test="status != null">status = #{status},</if>
            <if test="type != null">type = #{type},</if>
            <if test="description != null">description = #{description},</if>
            <if test="createTime != null">createTime = #{createTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTMedicalEmrDoctorsorderById" parameterType="String">
        delete from t_medical_emr_doctorsorder where id = #{id}
    </delete>

    <delete id="deleteTMedicalEmrDoctorsorderByIds" parameterType="String">
        delete from t_medical_emr_doctorsorder where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>